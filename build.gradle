plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '4.4.0.3356'
	id 'pmd'
}

group = 'com.empresa'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'


	runtimeOnly 'org.postgresql:postgresql'


	implementation 'org.redisson:redisson-spring-boot-starter:3.23.4'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'


	implementation 'io.github.cdimascio:dotenv-java:3.0.0'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

sonarqube {
	properties {
		property "sonar.projectKey", "b1elzz_ecommerce-api-spring"
		property "sonar.organization", "b1elzz"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", System.getenv("SONAR_TOKEN")
	}
}

pmd {
	toolVersion = '6.52.0'
	ruleSets = []
	ruleSetFiles = files('config/pmd/ruleset.xml')
}

tasks.withType(Pmd) {
	reports {
		xml.required.set(false)
		html.required.set(true)
	}
}
