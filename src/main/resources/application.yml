spring:

  datasource:
    url: jdbc:postgresql://localhost:5432/projeto
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      connection-timeout: 5000

  rabbitmq:
    host: localhost
    port: 5672
    username: ${RABBITMQ_USER:admin}
    password: ${RABBITMQ_PASSWORD:admin123!}
    connection-timeout: 5000
    queue:
      pedido-concluido: pedidos.concluido

  cache:
    redis:
      host: localhost
      port: 6379
      time-to-live: 300000

  mail:
    host: ${SMTP_HOST:smtp.example.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USER:your_email@example.com}
    password: ${SMTP_PASSWORD:your_password}
    properties:
      mail:
        smtp:
          auth: ${SMTP_AUTH:true}
          from: app@example.com
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          starttls:
            enable: ${SMTP_STARTTLS:true}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true


springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    operations-sorter: method
    tags-sorter: alpha

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,env,beans
  endpoint:
    health:
      show-details: always
      db:
        enabled: true
      redis:
        enabled: true
      rabbit:
        enabled: true


logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    com.empresa: DEBUG
    org.springdoc: DEBUG
  file:
    name: logs/application.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
